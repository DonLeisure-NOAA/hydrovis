#!/usr/bin/bash

do_not_destroy=(
  "module.vpc.data.aws_vpn_gateway.main" 
  "module.vpc.aws_main_route_table_association.main_private" 
  "module.vpc.aws_nat_gateway.hv-pub-nat-gw-a"
  "module.vpc.aws_nat_gateway.hv-pub-nat-gw-b"
  "module.vpc.aws_route_table.private"
  "module.vpc.aws_route_table.public"
  "module.vpc.aws_route_table_association.hydrovis-sn-pub-1a_public"
  "module.vpc.aws_subnet.hydrovis-sn-pub-1a"
  "module.vpc.aws_subnet.hydrovis-sn-pub-1b"
  "module.vpc.aws_subnet.hydrovis-sn-prv-app1a"
  "module.vpc.aws_subnet.hydrovis-sn-prv-app1b"
  "module.vpc.aws_subnet.hydrovis-sn-prv-data1a"
  "module.vpc.aws_subnet.hydrovis-sn-prv-data1b"
  "module.vpc.aws_subnet.hydrovis-sn-prv-web1a"
  "module.vpc.aws_subnet.hydrovis-sn-prv-web1b"
  "module.vpc.aws_vpc.main"
  "module.vpc.aws_vpc_ipv4_cidr_block_association.public_cidr"
  "module.vpc.aws_vpn_gateway_attachment.main"
  "module.egis.module.bucket[\"prv-alb-logging\"].aws_kms_alias.hydrovis-s3"
  "module.egis.module.bucket[\"prv-alb-logging\"].aws_kms_key.hydrovis-s3"
  "module.egis.module.bucket[\"prv-alb-logging\"].aws_s3_bucket.hydrovis"
  "module.egis.module.bucket[\"prv-alb-logging\"].aws_s3_bucket_policy.hydrovis"
  "module.egis.module.bucket[\"pub-alb-logging\"].aws_kms_alias.hydrovis-s3"
  "module.egis.module.bucket[\"pub-alb-logging\"].aws_kms_key.hydrovis-s3"
  "module.egis.module.bucket[\"pub-alb-logging\"].aws_s3_bucket.hydrovis"
  "module.egis.module.bucket[\"pub-alb-logging\"].aws_s3_bucket_policy.hydrovis"
  "module.s3.aws_s3_account_public_access_block.main"
  "module.s3.module.bucket[\"hml-backup\"].aws_kms_alias.hydrovis-s3"
  "module.s3.module.bucket[\"hml-backup\"].aws_kms_key.hydrovis-s3"
  "module.s3.module.bucket[\"hml-backup\"].aws_s3_bucket.hydrovis"
  "module.s3.module.bucket[\"hml-backup\"].aws_s3_bucket_policy.hydrovis"
  "module.s3-replication.module.bucket[\"hml\"].aws_kms_alias.hydrovis-s3"
  "module.s3-replication.module.bucket[\"hml\"].aws_kms_key.hydrovis-s3"
  "module.s3-replication.module.bucket[\"hml\"].aws_s3_bucket.hydrovis"
  "module.s3-replication.module.bucket[\"hml\"].aws_s3_bucket_policy.hydrovis"
  "module.s3-replication.module.bucket[\"nwm\"].aws_kms_alias.hydrovis-s3"
  "module.s3-replication.module.bucket[\"nwm\"].aws_kms_key.hydrovis-s3"
  "module.s3-replication.module.bucket[\"nwm\"].aws_s3_bucket.hydrovis"
  "module.s3-replication.module.bucket[\"nwm\"].aws_s3_bucket_policy.hydrovis"
  "module.egis_license_manager.data.aws_ami.windows"
  "module.egis_license_manager.data.aws_security_group.egis_stack"
  "module.egis_license_manager.data.template_cloudinit_config.licensemanager"
  "module.egis_license_manager.data.template_file.licensemanager"
  "module.egis_license_manager.aws_instance.license_manager"
  "module.iam-roles.data.template_file.HydroVISSSMPolicy-template"
  "module.iam-roles.data.template_file.HydrovisESRISSMDeploy-template"
  "module.iam-roles.data.template_file.hydrovis-hml-ingest-role-template"
  "module.iam-roles.data.template_file.hydrovis-viz-proc-pipeline-lambda-template"
  "module.iam-roles.aws_iam_instance_profile.HydrovisESRISSMDeploy"
  "module.iam-roles.aws_iam_instance_profile.HydrovisSSMInstanceProfileRole"
  "module.iam-roles.aws_iam_instance_profile.Hydroviz-RnR-EC2-Profile"
  "module.iam-roles.aws_iam_instance_profile.hydrovis-hml-ingest-role"
  "module.iam-roles.aws_iam_role.HydrovisESRISSMDeploy"
  "module.iam-roles.aws_iam_role.HydrovisSSMInstanceProfileRole"
  "module.iam-roles.aws_iam_role.Hydroviz-RnR-EC2-Profile"
  "module.iam-roles.aws_iam_role.hydrovis-hml-ingest-role"
  "module.iam-roles.aws_iam_role.hydrovis-viz-proc-pipeline-lambda"
  "module.iam-roles.aws_iam_role_policy.HydroVISSSMPolicy"
  "module.iam-roles.aws_iam_role_policy.HydrovisESRISSMDeploy"
  "module.iam-roles.aws_iam_role_policy.Hydroviz-RnR-EC2-Profile-SSM-policy"
  "module.iam-roles.aws_iam_role_policy.hydrovis-hml-ingest-role"
  "module.iam-roles.aws_iam_role_policy.hydrovis-hml-ingest-role-SSM-policy"
  "module.iam-roles.aws_iam_role_policy.hydrovis-viz-proc-pipeline-lambda"
  "module.iam-roles.aws_iam_role_policy_attachment.hydrovis-hml-ingest-role-lambda-execute-policy"
  "module.iam-roles.aws_iam_service_linked_role.autoscaling"
  "module.monitoring.aws_iam_service_linked_role.es"
  "module.monitoring.aws_elasticsearch_domain.es"
  "module.security-groups.aws_security_group.es-sg"
  "module.security-groups.aws_security_group.hv-allow-NWC-access"
  "module.security-groups.aws_security_group.hv-rabbitmq"
  "module.security-groups.aws_security_group.hv-test-loadbalancer-sg"
  "module.security-groups.aws_security_group.hydrovis-RDS"
  "module.security-groups.aws_security_group.hydrovis-nat-sg"
  "module.security-groups.aws_security_group.ssm-session-manager-sg"
  "module.vpces.aws_vpc_endpoint.ec2messages"
  "module.vpces.aws_vpc_endpoint.s3"
  "module.vpces.aws_vpc_endpoint.ssm"
  "module.vpces.aws_vpc_endpoint.ssmmessages"
  "module.egis.module.bucket[\"gis-server-cache\"].aws_kms_alias.hydrovis-s3"
  "module.egis.module.bucket[\"gis-server-cache\"].aws_kms_key.hydrovis-s3"
  "module.egis.module.bucket[\"gis-server-cache\"].aws_s3_bucket.hydrovis"
  "module.egis.module.bucket[\"gis-server-cache\"].aws_s3_bucket_policy.hydrovis"
  "module.egis.module.bucket[\"gp-server-cache\"].aws_kms_alias.hydrovis-s3"
  "module.egis.module.bucket[\"gp-server-cache\"].aws_kms_key.hydrovis-s3"
  "module.egis.module.bucket[\"gp-server-cache\"].aws_s3_bucket.hydrovis"
  "module.egis.module.bucket[\"gp-server-cache\"].aws_s3_bucket_policy.hydrovis"
  "module.egis.module.bucket[\"img-server-cache\"].aws_kms_alias.hydrovis-s3"
  "module.egis.module.bucket[\"img-server-cache\"].aws_kms_key.hydrovis-s3"
  "module.egis.module.bucket[\"img-server-cache\"].aws_s3_bucket.hydrovis"
  "module.egis.module.bucket[\"img-server-cache\"].aws_s3_bucket_policy.hydrovis"
  "module.egis.module.bucket[\"none\"].aws_kms_alias.hydrovis-s3"
  "module.egis.module.bucket[\"none\"].aws_kms_key.hydrovis-s3"
  "module.egis.module.bucket[\"none\"].aws_s3_bucket.hydrovis"
  "module.egis.module.bucket[\"none\"].aws_s3_bucket_policy.hydrovis"
  "module.egis.module.bucket[\"ptl-content\"].aws_kms_alias.hydrovis-s3"
  "module.egis.module.bucket[\"ptl-content\"].aws_kms_key.hydrovis-s3"
  "module.egis.module.bucket[\"ptl-content\"].aws_s3_bucket.hydrovis"
  "module.egis.module.bucket[\"ptl-content\"].aws_s3_bucket_policy.hydrovis"
  "module.egis.module.bucket[\"webgisdr\"].aws_kms_alias.hydrovis-s3"
  "module.egis.module.bucket[\"webgisdr\"].aws_kms_key.hydrovis-s3"
  "module.egis.module.bucket[\"webgisdr\"].aws_s3_bucket.hydrovis"
  "module.egis.module.bucket[\"webgisdr\"].aws_s3_bucket_policy.hydrovis"
  "module.kms.module.key[\"egis\"].aws_kms_alias.hydrovis"
  "module.kms.module.key[\"egis\"].aws_kms_key.hydrovis"
  "module.kms.module.key[\"encrypt-ec2\"].aws_kms_alias.hydrovis"
  "module.kms.module.key[\"encrypt-ec2\"].aws_kms_key.hydrovis"
  "module.kms.module.key[\"rds-ingest\"].aws_kms_alias.hydrovis"
  "module.kms.module.key[\"rds-ingest\"].aws_kms_key.hydrovis"
  "module.s3.module.bucket[\"deployment\"].aws_kms_alias.hydrovis-s3"
  "module.s3.module.bucket[\"deployment\"].aws_kms_key.hydrovis-s3"
  "module.s3.module.bucket[\"deployment\"].aws_s3_bucket.hydrovis"
  "module.s3.module.bucket[\"deployment\"].aws_s3_bucket_policy.hydrovis"
  "module.s3.module.bucket[\"fim\"].aws_kms_alias.hydrovis-s3"
  "module.s3.module.bucket[\"fim\"].aws_kms_key.hydrovis-s3"
  "module.s3.module.bucket[\"fim\"].aws_s3_bucket.hydrovis"
  "module.s3.module.bucket[\"fim\"].aws_s3_bucket_policy.hydrovis"
  "module.s3.module.bucket[\"rnr\"].aws_kms_alias.hydrovis-s3"
  "module.s3.module.bucket[\"rnr\"].aws_kms_key.hydrovis-s3"
  "module.s3.module.bucket[\"rnr\"].aws_s3_bucket.hydrovis"
  "module.s3.module.bucket[\"rnr\"].aws_s3_bucket_policy.hydrovis"
)

clear

echo "${#do_not_destroy[@]} Resources will not be rebuilt"
echo ""
echo ""

all_resources=`terraform state list`

i=0
j=0
for value in $all_resources
do
  ((j++))
  if [[ ! " ${do_not_destroy[*]} " =~ " ${value} " ]]; then
    ((i++))
    echo -ne "\rTainting $i/$j resources"
    terraform taint $value &> /dev/null
  fi
done

echo -ne "\r$i out of $j resources will be rebuilt.\n"