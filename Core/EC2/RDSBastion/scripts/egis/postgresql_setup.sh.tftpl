#!/bin/bash

POSTGRES_DATA_FOLDER="/home/ec2-user/postgres_data"

echo ""
echo "---- SETTING UP EGIS DB ----"

export PGPASSWORD=${egis_db_password}


# Create EGIS DB
echo "Creating EGIS DB..."
psql -h "${egis_db_host}" -U "${egis_db_username}" -c "CREATE DATABASE ${egis_db_name}"


# Setting up EGIS DB
echo "Setting up postgis..."
aws s3 cp "s3://${deployment_bucket}/${postgis_setup_s3_key}" "$${POSTGRES_DATA_FOLDER}/postgis_setup.sql"
psql -h "${egis_db_host}" -U "${egis_db_username}" -p ${egis_db_port} -d "${egis_db_name}" -f "$${POSTGRES_DATA_FOLDER}/postgis_setup.sql"
rm "$${POSTGRES_DATA_FOLDER}/postgis_setup.sql"


# Cleaning up EGIS DB
echo "Setting up services schema in the EGIS DB..."
psql -h "${egis_db_host}" -U "${egis_db_username}" -p ${egis_db_port} -d "${egis_db_name}" -c "DROP SCHEMA IF EXISTS services CASCADE;"
aws s3 cp "s3://${deployment_bucket}/egis_db_dumps/egisDB_services.dump" "$${POSTGRES_DATA_FOLDER}/egisDB_services.dump"
pg_restore -h "${egis_db_host}" -p ${egis_db_port} -d "${egis_db_name}" -U ${egis_db_username} -j 4 -v "$${POSTGRES_DATA_FOLDER}/egisDB_services.dump"
rm "$${POSTGRES_DATA_FOLDER}/egisDB_services.dump"

# Adding foreign data wrapper-linked schema to the viz processing publish, for the transfer of published data.
echo "Setting up vizprc_publish schema in the EGIS DB, ensuring postgres_fdw extension installed, and setting up foreign table wrappers..."
psql -h "${egis_db_host}" -U "${egis_db_username}" -p ${egis_db_port} -d "${egis_db_name}" \
    -tAc "DROP SCHEMA IF EXISTS vizprc_publish;
            CREATE SCHEMA IF NOT EXISTS vizprc_publish;
            GRANT ALL ON SCHEMA vizprc_publish TO ${egis_db_username};
            GRANT ALL ON ALL TABLES IN SCHEMA vizprc_publish TO ${egis_db_username};
            ALTER DEFAULT PRIVILEGES IN SCHEMA vizprc_publish GRANT all ON TABLES TO ${egis_db_username};

            CREATE EXTENSION IF NOT EXISTS postgres_fdw;
            DROP SERVER IF EXISTS vizprc_db CASCADE;
            CREATE SERVER vizprc_db FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '${viz_db_host}', dbname '${viz_db_name}', port '${viz_db_port}');
            CREATE USER MAPPING FOR ${egis_db_username} SERVER vizprc_db OPTIONS (user '${viz_proc_admin_rw_username}', password '${viz_proc_admin_rw_password}');
            IMPORT FOREIGN SCHEMA publish FROM SERVER vizprc_db INTO vizprc_publish;"


# Restoring EGIS Reference Schema Dumps
echo "Setting up reference schema in the EGIS DB..."
psql -h "${egis_db_host}" -U "${egis_db_username}" -p ${egis_db_port} -d "${egis_db_name}" -c "DROP SCHEMA IF EXISTS reference CASCADE;"
aws s3 cp "s3://${deployment_bucket}/egis_db_dumps/egisDB_reference.dump" "$${POSTGRES_DATA_FOLDER}/egisDB_reference.dump"
pg_restore -h "${egis_db_host}" -p ${egis_db_port} -d "${egis_db_name}" -U ${egis_db_username} -j 4 -v "$${POSTGRES_DATA_FOLDER}/egisDB_reference.dump"
rm "$${POSTGRES_DATA_FOLDER}/egisDB_reference.dump"


# Restoring AEP FIM Schema Dump
echo "Setting up aep_fim schema in the EGIS DB..."
psql -h "${egis_db_host}" -U "${egis_db_username}" -p ${egis_db_port} -d "${egis_db_name}" -c "DROP SCHEMA IF EXISTS aep_fim CASCADE;"
aws s3 cp "s3://${deployment_bucket}/egis_db_dumps/egisDB_aep_fim.dump" "$${POSTGRES_DATA_FOLDER}/egisDB_aep_fim.dump"
pg_restore -h "${egis_db_host}" -p ${egis_db_port} -d "${egis_db_name}" -U ${egis_db_username} -j 4 -v "$${POSTGRES_DATA_FOLDER}/egisDB_aep_fim.dump"
rm "$${POSTGRES_DATA_FOLDER}/egisDB_aep_fim.dump"


# Restoring FIM Catchments Schema Dumps
echo "Setting up fim_catchments schema in the EGIS DB..."
psql -h "${egis_db_host}" -U "${egis_db_username}" -p ${egis_db_port} -d "${egis_db_name}" -c "DROP SCHEMA IF EXISTS fim_catchments CASCADE;"
aws s3 cp "s3://${deployment_bucket}/egis_db_dumps/egisDB_fim_catchments.dump" "$${POSTGRES_DATA_FOLDER}/egisDB_fim_catchments.dump"
pg_restore -h "${egis_db_host}" -p ${egis_db_port} -d "${egis_db_name}" -U ${egis_db_username} -j 4 -v "$${POSTGRES_DATA_FOLDER}/egisDB_fim_catchments.dump"
rm "$${POSTGRES_DATA_FOLDER}/egisDB_fim_catchments.dump"