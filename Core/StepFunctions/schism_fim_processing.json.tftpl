{
  "Comment": "Processes the outputs for all SCHISM FIM services.",
  "StartAt": "Get Domain Tile Basenames",
  "States": {
    "Get Domain Tile Basenames": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${schism_fim_processing_arn}",
        "Payload": {
          "original_input.$": "$",
          "step": "get_domain_tile_basenames",
          "args": {
            "fim_config.$": "$.fim_config"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2
        }
      ],
      "Next": "Iterate over Tiles",
      "ResultPath": "$.result"
    },
    "Iterate over Tiles": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Process FIM By Tile",
        "States": {
          "Process FIM By Tile": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "FunctionName": "${schism_fim_processing_arn}",
              "Payload.$": "$"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "States.ALL"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 2,
                "BackoffRate": 2
              }
            ],
            "ResultSelector": {
              "output_raster.$": "$.Payload.output_raster",
              "output_bucket.$": "$.Payload.output_bucket"
            },
            "End": true
          }
        }
      },
      "ItemsPath": "$.result.Payload.domain_tile_basenames",
      "ItemSelector": {
        "step": "iteration",
        "tile_basename.$": "$$.Map.Item.Value",
        "args": {
          "job_type.$": "$.job_type",
          "reference_time.$": "$.reference_time",
          "product.$": "$.product",
          "fim_config.$": "$.fim_config",
          "sql_rename_dict.$": "$.sql_rename_dict"
        }
      },
      "Next": "Create VRT",
      "ResultPath": null
    },
    "Create VRT": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${optimize_rasters_arn}",
        "Payload": {
          "step": "create_vrt",
          "args": {
            "fim_config.$": "$.fim_config",
            "product.$": "$.product"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2
        }
      ],
      "ResultPath": null,
      "End": true
    }
  }
}